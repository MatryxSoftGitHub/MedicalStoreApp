// // // //how to call an api using javascript?
// // // const userAction = async () => {
// // //   const response = await fetch('http://example.com/movies.json');
// // //   const myJson = await response.json(); //extract JSON from the http response
// // //   // do something with myJson
// // // }


// // // const userAction = async () => {
// // //   const response = await fetch('http://example.com/movies.json', {
// // //     method: 'POST',
// // //     body: myBody, // string or object
// // //     headers: {
// // //       'Content-Type': 'application/json'
// // //     }
// // //   });
// // //   const myJson = await response.json(); //extract JSON from the http response
// // //   // do something with myJson
// // // }

// // // //how to use POST methods in Js?
// // // var xhr = new XMLHttpRequest();
// // // xhr.open("POST", yourUrl, true);
// // // xhr.setRequestHeader('Content-Type', 'application/json');
// // // xhr.send(JSON.stringify({
// // //     value: value
// // // }));


// // // var xhr = new XMLHttpRequest();
// // // // we defined the xhr

// // // xhr.onreadystatechange = function () {
// // //     if (this.readyState != 4) return;

// // //     if (this.status == 200) {
// // //         var data = JSON.parse(this.responseText);

// // //         // we get the returned data
// // //     }

// // //     // end of state change: it can be after some time (async)
// // // };

// // // xhr.open('GET', yourUrl, true);
// // // xhr.send();

// // // //how to call put mwethod api in javascript code inside script tag?

// // // function httpPut(newName) {
// // //   var myString = "https://https://someurl/Test/";
// // //   $.ajax({
// // //     url: myString + newName,
// // //     type: "PUT",
// // //     processData: false,
// // //     contentType: "application/json; charset=UTF-8",
// // //     data: JSON.stringify(data)
// // //   }).done(function(data) {
// // //     document.getElementById("testingBox7").innerHTML = JSON.stringify(data);
// // //   });
// // // };

// // // //how to update quantity value in mongodb document using api call in javascript code inside script tag?
// // // db.books.update({},
// // // [
// // //   {
// // //     "$set": {
// // //       "available_quantity": "$quantity"
// // //     }
// // //   }
// // // ],
// // // {
// // //   multi: true
// // // })

// // // //HOW TO update particular mongodb document using javascript code inside script tag?

// // // function convertGroup(group) {

// // //     group.sets.forEach(function (set) {
// // //         if (!set.mainValues) {
// // //             $set : {
// // //                 set.mainValues = set.values
// // //             }
// // //        }

// // //         if (!set.additionalValues) {
// // //             $set : {
// // //                 set.additionalValues = []
// // //             }
// // //         }
// // //     });
// // //     db.getCollection('group').update({'_id': group._id}, group);
// // // }
// // // db.getCollection('group').find({'sets.mainValues': {$exists: false}}).forEach(convertGroup)


// // //how to update mongodb document using javascript direct methods?
// // const result1 = await Movie.update({_id: id},{
// //     $set:{
// //       title: 'New Movie',
// //       onCinema: false
// //     }
// //   });


// // { n: 0, nModified: 0, ok: 1 }


// // const result = await Movie.findByIdAndUpdate(id,{
// //     $set:{
// //       title: 'New Movie',
// //       onCinema: false
// //     }
// //   });


// //how to call already created schema name inside script tag?


// <script src="file1.js" type="text/javascript"></script> 
// <script src="file2.js" type="text/javascript"></script> 


// <script src="file1.js" type="text/javascript"></script> 
// <script>
//     largeFunction();
// </script>

// how to call update api using javascript?

// const userAction = async () => {
//   const response = await fetch('http://example.com/movies.json');
//   const myJson = await response.json(); //extract JSON from the http response
//   // do something with myJson
// }


// const userAction = async () => {
//   const response = await fetch('http://example.com/movies.json', {
//     method: 'POST',
//     body: myBody, // string or object
//     headers: {
//       'Content-Type': 'application/json'
//     }
//   });
//   const myJson = await response.json(); //extract JSON from the http response
//   // do something with myJson
// }


// updateStocks(medicine.id)
//                     async function updateStocks(id) {
//                         alert("Inside")
//                         alert(id)
//                         let url = `/route/api/medical/stocks?id=${id}`
//                         try {
//                             let res = await fetch(url);
//                             var result=await res.json()
//                             alert(JSON.stringify(result));
//                             //return await res.json();
//                         } catch (error) {
//                             console.log(error);
//                         }
//                     }



// async function updateStocks(id) {
//     alert("Inside")
//     alert(id)
//     const result = await Movie.findByIdAndUpdate(id,{
//         $set:{
//             title: 'New Movie',
//             onCinema: false
//         }
//     });
// }


// axios.put(`/route/api/medical/stocks/${id}/update`,jsonStringifyModifiedResult)
//                             .then(response => alert(response.data.data));
//                         // axios({
//                         //     method: 'PUT',
//                         //     url: `/route/api/medical/stocks?id=${id}`,
//                         //     headers: {
//                         //         'Content-Type': 'application/json'
//                         //     },
//                         //     data: jsonStringifyModifiedResult
//                         // })
//                         // .then((response) => console.log(response))
//                         // .catch((error) => console.log(error))


//how to export html table data to custom pdf using axios javascript?

//write mongoose schema for store base64 data in mongodb


































